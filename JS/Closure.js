作用域
// 作用域就是一套规则，用于确定在何处以及如何查找变量（标识符）的规则
// ？链式作用域 / 作用域链
// - https://www.jianshu.com/p/7685863ca21f
// - https://www.jianshu.com/p/60ca27e185ec

问题 - 什么是作用域 / 作用域链

// 作用域：就是能够储存变量当中的值，并且能在之后对这个值进行访问或修改。是一套设计良好的用来储存变量的规则。并且之后可以方便的访问到这些变量。这套规则就成为作用域。
// 作用域链：根据在内部函数可以访问外部函数变量的这种机制，用链式查找决定哪些数据能被内部函数访问

//--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#


闭包
// http://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html (阮一峰)
// 闭包是能够读取其他函数内部变量的函数 - 在JS中，只有函数内部的子函数才能读取局部变量(函数作用域) - 简单理解成 定义在一个函数内部的函数
// 本质上 - 闭包就是将函数内部和函数外部连接起来的一座桥梁

问题 
1 - 实际开发中闭包的作用
// 最大用处
// 1.可以读取函数内部的变量
// 2.让这些变量的值始终保持在内存中

2 - 使用闭包的注意点
// 1.由于闭包会使得函数中的变量都被保存在内存中，内存消耗很大，所以不能滥用闭包，否则会造成网页的性能问题，在IE中可能导致内存泄露。解决方法是，在退出函数之前，将不使用的局部变量全部删除。
// 2.闭包会在父函数外部，改变父函数内部变量的值。所以，如果你把父函数当作对象（object）使用，把闭包当作它的公用方法（Public Method），把内部变量当作它的私有属性（private value），这时一定要小心，不要随便改变父函数内部变量的值。

// https://segmentfault.com/a/1190000006875662#articleHeader3

//--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#


IIFE (立即执行函数 / 立即调用函数表达式)
// - 函数体是函数声明的形式，使用运算符将其转换为函数表达式之后就可达到立即执行效果：(将匿名函数或函数声明转换为函数表达式)
// 隔离作用域 / 避免变量污染(命名冲突) - 框架
// https://www.cnblogs.com/cnfxx/p/7337889.html

// JQ
(function(window, undefined) {
  // code...
})(window);


//--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#


内存泄露 / 内存溢出




//--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#


垃圾回收机制